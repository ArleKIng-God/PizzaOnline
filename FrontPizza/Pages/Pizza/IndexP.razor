@page "/pizza"
@using FrontPizza.ViewModels;
@using PizzaOnline.DAL.Models;
@using Microsoft.AspNetCore.Authorization
@using FrontPizza.Validation

@attribute [Authorize]
@inject Data.PizzaService pizzaService

<h3>Pizza</h3>
<div class="button2" style="display:block;">
    <a class="btn btn-primary" href="/">Home</a>
    <AuthorizeView Roles="admin">
        <Authorized>
            <a class="btn btn-primary" href="pizza/add">Додати піцу</a>
        </Authorized>
        <NotAuthorized>
        </NotAuthorized>
    </AuthorizeView>   
</div>

<br />

@if (pizza == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>NamePizza</th>
                <th>Size</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pizz in pizza)
            {
                <tr onclick='location.href="pizza/@pizz.id"' class="black">
                    <td>@pizz.namePizza</td>
                    <td>@pizz.size см</td>
                    <td>@pizz.price $</td>
                    <td><img src="@pizz.image"></td>
                </tr>
                }
            </tbody>
    </table>
    <button @onclick="PrevPage">Prev</button>
    <span>@pageNum</span>
    <button @onclick="NextPage">Next</button>

}

<style>
    .black {
        color: black;
        text-decoration: none;
    }
</style>

@code {
    public PizzaViewModel pizzaViewModels = new PizzaViewModel();
    public List<PizzaViewModel> pizza;
    private int pageNum = 1;
    private int pageSize = 2;
    protected override async Task OnInitializedAsync()
    {
        pizzaViewModels = new PizzaViewModel();
        pizza = await pizzaService.GetPizzaAsync(new PizzaQueryParameters { PageSize = pageSize, PageNumber = pageNum });
    }
    public async Task NextPage()
    {
        pageNum++;
        pizza = await pizzaService.GetPizzaAsync(new PizzaQueryParameters { PageNumber = pageNum, PageSize = pageSize });
    }
    public async Task PrevPage()
    {
        if (pageNum > 1)
        {
            pageNum--;
            pizza = await pizzaService.GetPizzaAsync(new PizzaQueryParameters { PageNumber = pageNum, PageSize = pageSize });
        }
    }
}
